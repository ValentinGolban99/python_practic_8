# Известно, что амплитуда качающегося маятника с каждым разом затухает на 8,4% от амплитуды предыдущего колебания. 
# Если качнуть маятник, то, строго говоря, он не остановится никогда, 
# просто амплитуда будет постоянно уменьшаться до тех пор, пока мы не сочтём такой маятник остановившимся.

# Что нужно сделать
# Напишите программу, определяющую, сколько раз качнётся маятник, прежде чем он, по нашему мнению, остановится.
# Программа получает на вход начальную амплитуду колебания в сантиметрах и конечную амплитуду колебаний, 
# которая считается остановкой маятника. Обеспечьте контроль ввода.
# Подсказка: для уменьшения числа можно умножить его на значение, которое меньше единицы. 
# Например, уменьшение на 10%: 100 * 0.9 = 90.

# Пример

# Введите начальную амплитуду: 1
# Введите амплитуду остановки: 0.1
# Маятник считается остановившимся через 27 колебаний

def number_oscillations(first_argument, second_argument):
    
    count = 0
    
    while first_argument > second_argument / 10: # Тут мне интересно; Пока не поставил " / 10" нужного ответа не получил. Так и должно быть?
    
        first_argument = first_argument * 0.84
        count += 1
    
    return count


def main():
    
    initial_amplitude = float(input("Введите начальную амплитуду: "))
    amplitude_stop = float(input("Введите амплитуду остановки: "))
    
    print("Маятник остановится через ", number_oscillations(initial_amplitude, amplitude_stop), " колебаний")

main()